#!/bin/bash
# Copyright 2013, Sinclair R.F., Inc.
# Make script for Xilinx Spartan 6

TOOL_DIR="$1";
NAME="$2";

#DEVICE=xc6slx4l-tqg144;  # low power device
DEVICE=xc6slx4-2tqg144;  # standard performance device
#DEVICE=xc6slx4-3tqg144;  # high performance device

( cd ../uc; ../../../../ssbcc -q --define-clog2 ${NAME}.9x8; ) || exit 1;

FILES="";
FILES+=" ../uc/${NAME}.v";

VERSION="`echo ${TOOL_DIR} | sed -e 's/^[^0-9]\+//' -e 's/[^0-9]\+$//'`";

#
# Configure and run the synthesis
#

source ${TOOL_DIR}/settings32.sh || { echo "ERROR:  settings32.sh failed" > /dev/stderr; exit 1; }

for fname in ${FILES}; do
  echo "verilog work \"${fname}\"";
done > ${NAME}.prj;

mkdir -p xst/projnav.tmp;

cat <<EOF > ${NAME}.xst
set -tmpdir "xst/projnav.tmp"
set -xsthdpdir "xst"
run
-ifn ${NAME}.prj
-ofn ${NAME}
-p ${DEVICE}
-top ${NAME}
-async_to_sync NO
-auto_bram_packing NO
-bram_utilization_ratio 100
-bufg 16
-bus_delimiter <>
-case Maintain
-cross_clock_analysis NO
-dsp_utilization_ratio 100
-equivalent_register_removal YES
-fsm_encoding Auto
-fsm_extract YES
-fsm_style LUT
-glob_opt AllClockNets
-hierarchy_separator /
-ifmt mixed
-iob Auto
-iobuf YES
-iuc NO
-keep_hierarchy No
-lc Auto
-max_fanout 100000
-netlist_hierarchy As_Optimized
-ofmt NGC
-opt_level 1
-opt_mode Speed
-optimize_primitives NO
-power NO
-ram_extract Yes
-ram_style Auto
-read_cores YES
-reduce_control_sets Auto
-register_balancing No
-register_duplication YES
-resource_sharing YES
-rom_extract Yes
-rom_style Auto
-rtlview Yes
-safe_implementation No
-shreg_extract YES
-slice_utilization_ratio 100
-slice_utilization_ratio_maxmargin 5
-use_clock_enable Auto
-use_dsp48 Auto
-use_sync_reset Auto
-use_sync_set Auto
-write_timing_constraints NO
EOF

xst \
  -ifn "${NAME}.xst" \
  -ofn "${NAME}.syr" \
|| { echo "ERROR:  XST Failed!"; exit 1; }

#
# Convert the ngc to an ngd.
#

ngdbuild \
  -dd _ngo \
  -nt timestamp \
  -uc ${NAME}.ucf \
  -p ${DEVICE} \
  ${NAME}.ngc ${NAME}.ngd \
|| { echo "ngdbuild Failed!"; exit 1; }

#
# Run map.
#

MAP_ARG="";

# For area optimization, use the following:
#MAP_ARG+=" -lc area";

# For speed optimization, using the following:
#MAP_ARG+=" -lc auto -logic_opt on -register_duplication on -retiming on -timing -xe c";

if [[ "${VERSION}" > "12.0" ]]; then
  MAP_ARG+=" -r 4";
fi

if [ -z "`echo ${MAP_ARG} | sed -n '/logic_opt/p'`" ]; then
  MAP_ARG+=" -logic_opt off";
fi

map                             \
  -p ${DEVICE}                  \
  -o ${NAME}.ncd                \
  -detail                       \
  -w                            \
  ${MAP_ARG}                    \
  ${NAME}.ngd ${NAME}.pcf       \
|| { echo "MAP Failed!"; exit 1; }

#
# Run par.
#

par             \
  -w            \
  -xe c         \
  ${NAME}.ncd ${NAME}.ncd ${NAME}.pcf \
|| { echo "PAR Failed!"; exit 1; }

#
# Optionally perform timing analysis
#

if [ `false` ]; then
  trce \
    -v 3 \
    -s 3 \
    -n 3 \
    -fastpaths \
    -xml ${NAME}.twx \
    ${NAME}.ncd \
    -o ${NAME}.twr \
    ${NAME}.pcf \
    -ucf ${NAME}.ucf
fi

# Successful execution!
exit 0;
