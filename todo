  00readme.html
    update

  ssbcc
    add interrupt handling
    add optional fast version of the data and return stacks
    do VHDL
    clean up temporary files

  core/9x8
    00readme.html
      update
    core.v
**    use a register for s_R (this is the critical path)
*     add an instruction to put of copy of T in R (r!)?
*     add r>N and r! operators?
2     fully debug the core and add test benches
      resolve ISE synthesizing 50 slices instead of 36
    asm
      add "filename" to tokens and improve error messages
      add non-return restriction to some optional macro arguments
      implement .abbr directive
    core.vhd
      do this once core.v is completed

  lib/9x8/math.s
    -- add_u8_u32__u32, ...
    -- sub_uX_uY__uZ, X,Y,Z \in {8,16,24,32}, Z \in min(X,Y)+{0,8}, Z<=32
    -- add signed versions

  lib/9x8/forth.s
    -- identify good instructions to include

  license
    - look at http://creativecommons.org/licenses/by-sa/
      - used by Gumstix

  publicize
    - opencores
    - github
    - ssbcc.net
    - ssbcc@sinclairrf.com or rodney@ssbcc.net
    - EETimes and other e-rags
    - add to resume
