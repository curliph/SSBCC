  BUGS:
 
  ssbcc
    add "function"s for use by peripherals and incorporate all functions at the top of the peripheral section
    validate signal names
      ensure no collisions with signals within the core
    put ssbccGenVerilog in a class in core/9x8
    Finish interrupt handling
    documentation
      top-level overview, point to implemented cores
      required:  ARCHITECTURE and sizes, ASSEMBLY, and HDL
      I/O Ports
      INPORT and OUTPORT
      PERIPHERAL
        finish doc/peripheral.html
      all error messages
    incorporate "COMBINE" feature to merge stacks or memories into large RAMs
    add VHDL

  core/9x8
*   finish the test bench to validate the core
      finish the validation
      add to the documentation
    documentation
      update
      assembler
        directives
        instructions
          change "opcodes.html" to "instructions.html", ...
          remove "dis" and "ena"
        parameters
        constants
        interrupts
      peripherals
    core.v
      change major opcodes to constants and incorporate in the diagnostic peripherals
      speed up core
      determine settings to maximize speed or minimize resources
      implement interrupt handling
    asm
      require .memory directive to be repeated after other directives, EOF, etc.
      improve error message for missing input files
      add non-return-stack-alteration restriction to some optional macro arguments
      implement .abbr directive
    peripherals
      create a base class for peripherals
**    make all peripheral configuration commands match "open_drain" format
**    add a 'function' key to config for:
        clog2
        instruction dump
      finish "monitor_stack" periperhal:
        detect out-of-range values for memory, inport, outport, etc.
        add "finish=n"
        add "history=n"
        add "log"
        add option to assert stack status at key program points
*     finish "UART_Tx" peripheral
        accomodate parameter names in baudmethod
      INTERRUPT
      timer
      UART_Rx -- single-byte deserializer w/ and w/o FIFO
      UART -- single-byte serdes w/ and w/o FIFO
      interrupt enable/disable (through INTERRUPT command)
      multi-byte adder
      multiplier
      PICK -- emulate the Forth operator?
      bus slave peripherals -- store external commands in a FIFO and statuses in dual-port RAM for external reads
        SPI
        I2C
      SoC Interconnects
        wishbone_slave
        avalon_slave
        wishbone_master
        avalon_master
    core.vhd
      do this once core.v is completed

  examples
    add more examples
      "echo" program
      Jim Haberly -- accumulate 10 samples from an ADC

  lib/9x8/math.s
    -- incorporate adder peripheral
    -- add_u8_u32__u32, ...
    -- sub_uX_uY__uZ, X,Y,Z \in {8,16,24,32}, Z \in min(X,Y)+{0,8}, Z<=32
    -- add signed versions

  lib/9x8/forth.s
    -- identify good instructions to include

  license
    - look at http://creativecommons.org/licenses/by-sa/
      - used by Gumstix

  publicize
    - opencores
    - ssbcc.net
    - EETimes and other e-rags
    - add to web page
