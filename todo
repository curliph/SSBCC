  ssbcc
    add multi-port I/O (i.e., 24-bit I/O ports)
      - exmpl:  INPORT 17-bit,latch i_count I_COUNT
                asm:  .inport(I_COUNT,3) ==> I_COUNT inport_incr inport_incr inport
                OUTPORT 24-bit,strobe o_count O_COUNT
                asm:  .outport(O_COUNT,3) ==> O_COUNT+2 outport_decr outport_decr outport drop
                asm:  O_COUNT_2 2+ .outport(,3) ==> O_COUNT_2 ...
    add interrupt handling
    add optional fast version of the data and return stacks
    do VHDL
    add exception handler
    clean up temporary files

  core/9x8
    core.v
*     use a register for s_R
*     add inport/outport w/ nip instead of drop and w/ auto increment/decrement for the port number
*     add an instruction to put of copy of T in R?
*     add r>N operator?
2     fully debug the core
      resolve ISE synthesizing 50 slices instead of 36
    asm
*     variant macros to reduce code space:  .jump(addr), .jump(addr,op), etc.
*     access inport/outport w/o macro
        - need this for general-purpose I/O such as I2C I/F
      add loop labels to the output instruction list
      implement .constant directive
      implement .abbr directive
      add .fetch-(name,N) and .store+/-(name,N) macros
      allow direct use of fetch, fetch-, store+, and store-
      add exception handler
    core.vhd
      do this once core.v is completed

  lib/9x8/math.s
    -- add_u8_u32__u32, ...
    -- sub_uX_uY__uZ, X,Y,Z \in {8,16,24,32}, Z \in min(X,Y)+{0,8}, Z<=32
    -- add signed versions

  lib/9x8/forth.s
    -- identify good instructions to include

  license
    - look at http://creativecommons.org/licenses/by-sa/
      - used by Gumstix

  publicize
    - opencores
    - github
    - ssbcc.net
    - ssbcc@sinclairrf.com or rodney@ssbcc.net
